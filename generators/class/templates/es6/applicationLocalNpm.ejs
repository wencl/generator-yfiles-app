import {
  License,
  GraphComponent,
  ShinyPlateNodeStyle,
  HierarchicLayout,
  Class,
  LayoutExecutor,
  GraphEditorInputMode
} from 'yfiles'

// Tell the library about the license contents
License.value = <%-licenseContent%>;

// We need to load the yfiles/view-layout-bridge module explicitly to prevent the webpack
// tree shaker from removing this dependency which is needed for 'morphLayout' in this demo.
Class.ensure(LayoutExecutor);


/**
* <% if(description) { %><%- description %><% } else { %>A yfiles class.<% } %>
*/
class <%- name %> {

  initialize() {
    // create a GraphComponent
    const graphComponent = new GraphComponent('#graphComponent');

    // get the IGraph
    const graph = graphComponent.graph;

    // create and configure a default node style
    graph.nodeDefaults.style = new ShinyPlateNodeStyle({
      fill: "orange",
      drawShadow: true
    });

    // create some nodes
    const node1 = graph.createNode([50, 50, 30, 30]);
    const node2 = graph.createNode();

    // create an edge
    graph.createEdge(node1, node2);

    // create an input mode
    graphComponent.inputMode = new GraphEditorInputMode();

    // execute a layout
    graphComponent.morphLayout(new HierarchicLayout());
  }

  constructor() {
    this.initialize();
  }

}

new <%- name %>();
