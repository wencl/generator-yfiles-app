<% if(moduleList.length>0) { %>import yfiles from '<%= moduleList[0]%>'; <%}%><% if(moduleList.length>1) {
for(var i=1;i<moduleList.length;i++) {
  %>
import '<%= moduleList[i]%>';<%
  }
}%>

(<any>yfiles).license = <%-licenseContent%>;

/**
 * <% if (description) { %><%= description %><% } else { %>A yfiles class.<% } %>
 */
export class <%- name %> {

  initialize() {
    // create a GraphComponent
    const graphComponent:yfiles.view.GraphComponent = new yfiles.view.GraphComponent('#graphComponent');
  <% if (useShapeNodeStyle) { %>
    // create and configure a default node style
    graphComponent.graph.nodeDefaults.style = new yfiles.styles.ShinyPlateNodeStyle({
      fill: yfiles.view.Fill.ORANGE,
      drawShadow: true
    });
  <%}%>

    // get the IGraph
    const graph:yfiles.graph.IGraph = graphComponent.graph;
    // create some nodes
    const node1:yfiles.graph.INode = graph.createNode(new yfiles.geometry.Rect(50, 50, 30, 30));
    const node2:yfiles.graph.INode = graph.createNode();

    // create an edge
    graph.createEdge(node1, node2);
  <% if (useGraphEditorInputMode) { %>
    // create an input mode
    graphComponent.inputMode = new yfiles.input.GraphEditorInputMode();
  <% } %>
  <% if (layout) { %>
    // execute a layout
    graphComponent.morphLayout(new <%=layout%>());
  <% } %>
  }

  constructor() {
    this.initialize();
  }
}
<% if (postClassContent) { %><%- postClassContent %><% } %>

